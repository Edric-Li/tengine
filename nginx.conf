user  nginx;
# This number should be, at maximum, the number of CPU cores on your system.
worker_processes auto;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;


events {
    # The effective method, used on Linux 2.6+, optmized to serve many clients with each thread.
    use epoll;
    # Determines how many clients will be served by each worker process.
    worker_connections 4000;
    # Accept as many connections as possible, after nginx gets notification about a new connection.
    multi_accept on;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 128;
    #The buffer size of the client request header,
    client_header_buffer_size 4k;
    #Set the header buffer size requested by the client
    large_client_header_buffers 4 256k;
    #long time
    check_shm_size 5M;
    # Allow the server to close the connection after a client stops responding.
    reset_timedout_connection on;
    client_header_timeout 15;
    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 10;
    # If the client stops reading data, free up the stale client connection after this much time.
    send_timeout 15;
    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout 240;
    # Number of requests a client can make over the keep-alive connection.
    keepalive_requests 30;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #The maximum number of bytes that the buffer agent buffers client requests
    client_body_buffer_size 20m;
    #Maximum number of single file bytes allowed for client requests
    client_max_body_size 10g;
    #Set the buffer size of nginx to store user header information
    proxy_buffer_size 64k;
    #proxy_ Buffers buffer. If the average page size is less than 32K, set it like this
    proxy_buffers 4 128k;
    #Buffer size (proxy) under high load_ buffers*2ï¼‰
    proxy_busy_buffers_size 256k;
    #Set the size of the cache folder. If it is larger than this value, it will be transferred from the upstream server
    proxy_temp_file_write_size 256k;
    #Nginx connection timeout with back end server (proxy connection timeout)
    proxy_connect_timeout 600s;
    #Back end server data return time (agent sending timeout)
    proxy_send_timeout 1200s;
    #Response time of back end server (proxy receiving timeout) after successful connection
    proxy_read_timeout 1200s;
    open_file_cache max=204800 inactive=20s;
    open_file_cache_min_uses 1;
    open_file_cache_valid 30s;

    # Compression.
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_disable "msie6";
    gzip_buffers 4 16k;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml;

    # Sendfile copies data between one FD and other from within the kernel.
    sendfile on;
    # Don't buffer data-sends (disable Nagle algorithm).
    tcp_nodelay on;
    # Causes nginx to attempt to send its HTTP response head in one packet,  instead of using partial frames.
    tcp_nopush on;


    # Hide web server information
    server_tokens off;
    server_info off;
    server_tag off;

    # redirect server error pages to the static page
    error_page 404             /404.html;
    error_page 500 502 503 504 /50x.html;

    include /etc/nginx/conf.d/*.conf;
}
